@model AdminIndexViewModel

@using Comabit.UI.Areas.Admin.Models.Home;
@using Comabit.UI.Areas.Authentication.Models.Geo;
@using Comabit.UI.Models.Match;

@{
    ViewBag.Title = "Admin Dashboard";
    string NewBuyersSinceLastWeekPercentClass = Model.NewBuyersSinceLastWeekPercent >= 0 ? "text-success" : "text-danger";
    string NewSellersSinceLastWeekPercentClass = Model.NewSellersSinceLastWeekPercent >= 0 ? "text-success" : "text-danger";
}

@Html.HiddenFor(m => m.BuyerSellerTrendJson)
<h1 class="h1 mb-1">Übersicht</h1>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item active" aria-current="page">Das Wichtigste auf einen Blick</li>
    </ol>
</nav>

<div class="row">
    <div class="col-xl-4 col-xxl-5 d-flex">
        <div class="w-100">
            <div class="row">
                <div class="col-sm-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col mt-0">
                                    <h5 class="card-title">Verkäufer</h5>
                                </div>
                            </div>
                            <h1 class="mt-1 mb-3">@Model.CountBuyers</h1>
                            <div class="mb-0">
                                <span class="@NewBuyersSinceLastWeekPercentClass"> <i class="mdi mdi-arrow-bottom-right"></i> @Model.NewBuyersSinceLastWeekPercent </span>
                                <span class="text-muted">seit letzter Woche</span>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col mt-0">
                                    <h5 class="card-title">Einkäufer</h5>
                                </div>
                            </div>
                            <h1 class="mt-1 mb-3">@Model.CountSellers</h1>
                            <div class="mb-0">
                                <span class="@NewSellersSinceLastWeekPercentClass"> <i class="mdi mdi-arrow-bottom-right"></i> @Model.NewSellersSinceLastWeekPercent </span>
                                <span class="text-muted">seit letzter Woche</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-12 col-lg-4 col-xxl-3 d-flex">
        <div class="card flex-fill w-100">
            <div class="card-header">

                <h5 class="card-title mb-0">Einkäufer / Verkäufer</h5>
            </div>
            <div class="card-body d-flex w-100">
                <div class="align-self-center chart chart-lg">
                    <canvas id="ChartBuyerSellerTrendJson"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12 col-lg-6 d-flex">
        <div class="card flex-fill">
            <div class="card-header">

                <h5 class="card-title mb-0">Neuste Logs</h5>
            </div>
            <table class="table table-hover my-0">
                <thead>
                    <tr>
                        <th scope="col">Log-Nachricht</th>
                        <th scope="col">Anfrage Nr.</th>
                        <th scope="col">Kategorie</th>
                        <th scope="col">Einkäufer</th>
                        <th scope="col">Projektname / Betreff</th>
                        <th scope="col">Lieferadresse</th>
                        <th scope="col">Bieterfrist</th>
                        <th scope="col">Veröffentlicht am</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (LogViewModel log in Model.Logs)
                    {
                        <tr>
                            <td>@log.Description</td>

                            <td>@log.Inquiry?.InquiryNumber</td>
                            <td>
                                @foreach (var group in log.Inquiry?.SelectedPortfolios.GroupBy(s => s.Key))
                                {
                                    <strong>@group.Key -</strong>

                                    foreach (var portfolio in group)
                                    {
                                        <strong>@portfolio.Value</strong><br />
                                    }

                                    <br />
                                }
                            </td>
                            <td>
                                @log.Inquiry?.Project.Buyer?.Name
                            </td>
                            <td>
                                @log.Inquiry?.Project.ProjectName<br />
                                @log.Inquiry?.Purepose
                            </td>
                            <td>
                                @log.Inquiry?.DeliveryStreet<br />
                                @log.Inquiry?.DeliveryPostalCode, @log.Inquiry?.DeliveryCity
                            </td>
                            <td>
                                @log.Inquiry?.Deadline.ToString("dd.MM.yyyy")<br />
                                <small class="text-sm">@log.Inquiry?.DeadlineInfo</small>
                            </td>
                            <td>
                                <span class="badge badge-success-light">veröffentlicht</span><br />
                                <small class="text-sm">@log.Inquiry?.PublishedAt.Value.ToString("dd.MM.yyyy HH:mm") Uhr</small>
                            </td>
                            <td>
                                @if (log.Inquiry != null)
                                {
                                    <div class="dropdown">
                                        <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                            Aktion
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item detail" href="@Url.Action("Get", "Inquiry", new { id = log.InquiryId })">Anfrage anzeigen</a></li>
                                            <li>
                                                <a class="dropdown-item disabled" href="@Url.Action("Delete", "Inquiry", new { id = log.InquiryId })">
                                                    Anfrage Löschen
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var buyerSellerByMonthJson = $.parseJSON($('#BuyerSellerTrendJson').val());
            var lablesstrings = buyerSellerByMonthJson.Labels;
            var dataarrays = buyerSellerByMonthJson.Data;
            var yAxisStepsize = buyerSellerByMonthJson.yAxisStepSize;
            // Bar chart
            new Chart(document.getElementById("ChartBuyerSellerTrendJson"), {
                type: "bar",
                data: {
                    labels: lablesstrings,
                    datasets: [{
                        label: "Anzahl Verkäufer",
                        backgroundColor: window.theme.primary,
                        borderColor: window.theme.primary,
                        hoverBackgroundColor: window.theme.primary,
                        hoverBorderColor: window.theme.primary,
                        data: dataarrays[0],
                        barPercentage: .75,
                        categoryPercentage: .5
                    }, {
                        label: "Anzahl Einkäufer",
                        backgroundColor: window.theme.danger,
                        borderColor: window.theme.danger,
                        hoverBackgroundColor: window.theme.danger,
                        hoverBorderColor: window.theme.danger,
                        data: dataarrays[1],
                        barPercentage: .75,
                        categoryPercentage: .5
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    legend: {
                        display: true
                    },
                    scales: {
                        yAxes: [{
                            gridLines: {
                                display: false
                            },
                            stacked: false,
                            ticks: {
                                stepSize: yAxisStepsize
                            }
                        }],
                        xAxes: [{
                            stacked: false,
                            gridLines: {
                                color: "transparent"
                            }
                        }]
                    }
                }
            });
        });
    </script>
}