@{
    ViewBag.Title = "Nachrichten";
}

<h1 class="h1 mb-1">Nachrichten</h1>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Start</a></li>
        <li class="breadcrumb-item active">Alle Nachrichten</li>
    </ol>
</nav>

<div class="row">
    <div class="col-12 @*d-flex*@">
        <div class="card">
            <div class="row g-0">
                <div class="col-12 col-lg-5 col-xl-3 border-end">
                    <div class="px-4 d-none d-md-block">
                        <div class="d-flex align-items-center">
                            <div class="flex-grow-1">
                                <input type="text" class="form-control my-3" placeholder="Suche...">
                            </div>
                        </div>
                    </div>

                    <div id="matches-list"></div>

                    <hr class="d-block d-lg-none mt-1 mb-0" />
                </div>
                <div class="col-12 col-lg-7 col-xl-9">
                    <div class="py-2 px-4 border-bottom d-none d-lg-block">
                        <div class="d-flex align-items-center py-1">
                            <div class="flex-grow-1 ps-3">
                                <strong id="match-title"></strong>
                                @*<div class="text-muted small" id="match-writing"><em>schreibt...</em></div>*@
                            </div>
                        </div>
                    </div>

                    <div class="position-relative">
                        <div class="chat-messages p-4" id="chat-messages"></div>
                    </div>

                    <div class="flex-grow-0 py-3 px-4 border-top">
                        <form id="add-message-form">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Nachricht eingeben" id="message-input">
                                <button class="btn btn-primary" type="submit" id="add-message">Nachricht senden</button>
                            </div>
                        </form>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var currentMatch;
            var getMessage;

            $.ajax({
                url: '@Url.Action("AllMatchChatsForSeller", "Message", new { Area = "" })',
                type: 'GET',
                dataType: 'json',
                success: function (result) {
                    $.each(result, function (idx, match) {
                        var matchHtml =
                            '<a href="#" class="list-group-item list-group-item-action border-0 match-item" data-id="' + match.matchId
                            + '" data-name="' + match.buyerName + ': Angebot #' + match.offerNumber + ' | ' + match.projectName + '" data-receiver-id="' + match.buyerId + '">'
                                + '<div class="badge bg-success float-end unread-badge ' + (match.unreadCount == 0 ? 'd-none' : '') + '">' + match.unreadCount + '</div>'
                                    + '<div class="d-flex align-items-start">'
                                    + '<div class="flex-grow-1 ms-3">'
                                        + match.buyerName //+ ' <span class="fas fa-circle chat-online small" title="Online"></span>'
                                        + '<div class="small"><strong>Angebot #' + match.offerNumber + '</strong>, ' + match.offerDateFormatted + '</div>'
                                        + '<div class="small"><strong>' + match.projectName + '</strong><br />' + match.postalCode + ' ' + match.city + '</div>'
                                    + '</div>'
                                + '</div>'
                            + '</a>'

                        $('#matches-list').append(matchHtml);
                    });

                    if (!!result && result.length > 0) {
                        currentMatch = $('.match-item').first();
                        loadMatchMessages(currentMatch);
                        setMatchTitle(currentMatch);
                    }
                },
                error: function (request, error) {

                }
            });

            $(document).on('click', '.match-item', function () {
                currentMatch.removeClass('bg-info bg-gradient');
                currentMatch = $(this);
                loadMatchMessages(currentMatch);
                setMatchTitle(currentMatch);

                return false;
            });

            $('#add-message-form').on('submit', function () {
                var messageText = stripHtml($('#message-input').val());
                var matchId = currentMatch.data('id');
                var receiverId = currentMatch.data('receiverId');

                if ($('#message-input').val() === '') return false;

                $.ajax({
                    url: '@Url.Action("AddMessage", "Message", new { Area = "" })',
                    type: 'POST',
                    data: {
                        matchId: matchId,
                        text: messageText,
                    },
                    dataType: 'json',
                    success: function (newMessage) {
                        var chatMessages = $('#chat-messages');

                        chatMessages.append(getChatMessageHtml(newMessage));
                        chatMessages.animate({ scrollTop: chatMessages.prop("scrollHeight") }, 500);

                        $('#message-input').val("").focus();

                        messageHubConnection.send("SendMatchMessage", receiverId, matchId, newMessage.id);
                    },
                    error: function (request, error) {

                    }
                });

                return false;
            });

            var loadMatchMessages = function (match) {
                match.addClass('bg-info bg-gradient');

                $.ajax({
                    url: '@Url.Action("AllMessagesForMatch", "Message", new { Area = "" })',
                    type: 'GET',
                    data: {
                        matchId: match.data('id'),
                    },
                    dataType: 'json',
                    beforeSend: function () {
                        $('.chat-messages').empty().html('Lade Nachrichten...');
                    },
                    success: function (result) {
                        $('.chat-messages').empty();

                        $.each(result, function (idx, message) {
                            $('.chat-messages').append(getChatMessageHtml(message));
                        });

                        var chatMessages = $('#chat-messages');
                        var firstUnreadMessage = $('.chat-message.unread').first();
                        if (firstUnreadMessage.length == 1) {
                            chatMessages.animate({ scrollTop: chatMessages.scrollTop() + firstUnreadMessage.position().top - 100 }, 500);
                        } else {
                            chatMessages.animate({ scrollTop: chatMessages.prop("scrollHeight") }, 500);
                        }

                        $('.unread-badge', currentMatch).addClass('d-none');
                    },
                    error: function (request, error) {

                    }
                });
            }

            var setMatchTitle = function (match) {
                $('#match-title').text(match.data('name'));
            }

            getMessage = function (matchId, messageId) {
                $.ajax({
                    url: '@Url.Action("GetMatchChatForSeller", "Message", new { Area = "" })',
                    type: 'GET',
                    data: {
                        matchId: matchId,
                        messageId: messageId
                    },
                    dataType: 'json',
                    success: function (matchChat) {
                        $('.chat-messages').append(getChatMessageHtml(matchChat.newestMessage));

                        var chatMessages = $('#chat-messages');
                        var firstUnreadMessage = $('.chat-message.unread').first();

                        if (firstUnreadMessage.length == 1) {
                            chatMessages.animate({ scrollTop: chatMessages.scrollTop() + firstUnreadMessage.position().top - 100 }, 500);
                        } else {
                            chatMessages.animate({ scrollTop: chatMessages.prop("scrollHeight") }, 500);
                        }

                        $('.unread-badge', currentMatch).addClass('d-none');
                    },
                    error: function (request, error) {

                    }
                });
            }

            updateMatchChat = function (matchId, messageId) {
                $.ajax({
                    url: '@Url.Action("GetMatchChatForSeller", "Message", new { Area = "" })',
                    type: 'GET',
                    data: {
                        matchId: matchId,
                        messageId: messageId
                    },
                    dataType: 'json',
                    success: function (matchChat) {
                        var matchesList = $('#matchesList');
                        var chat = $('.match-item[data-id=' + matchId + ']');

                        $('.unread-badge', chat).text(matchChat.unreadCount).removeClass('d-none');
                    },
                    error: function (request, error) {

                    }
                });
            }

            messageHubConnection.on('ReceiveMatchMessage', function (matchId, messageId) {
                var currentMatchId = currentMatch.data("id");

                if (currentMatchId == matchId) {
                    getMessage(matchId, messageId);
                } else {
                    updateMatchChat(matchId, messageId);
                }
            });
        });
    </script>
}