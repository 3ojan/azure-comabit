@model Comabit.UI.Areas.Authentication.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Neues Passwort vergeben";
    Layout = "~/Views/Shared/_Layout_Anonymous.cshtml";
}

<div class="col-lg-6 col-md-8 mx-auto">
    @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-forgotPassword ", role = "form", autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Code)
        @Html.HiddenFor(model => model.UserId)

        <div class="card">
            <div class="card-header">
                <h3 class="header text-center">@ViewBag.Title.</h3>
                <p>Bitte geben Sie hier Ihr neues Passwort ein:</p>
                @Html.ValidationSummary("", new { @class = "text-danger" })
            </div>
            <div class="card-body">
                <div class="form-group row">
                    @Html.LabelFor(m => m.Password, "Passwort*", new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", autocomplete = "off" })
                        <div class="mt-1" id="password-strength" style="display: none">
                            Passwort-Stärke:
                            <strong class="claim text-danger" style="display: none;">unsicher</strong>
                            <strong class="claim text-warning" style="display: none;">schwach</strong>
                            <strong class="claim text-info" style="display: none;">ganz ok</strong>
                            <strong class="claim text-success" style="display: none;">stark</strong>
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(m => m.ConfirmPassword, "Passwort Bestätigung*", new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", autocomplete = "off" })
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <small>Das Passwort muss mind. 10 Zeichen lang sein, aus Groß- und Kleinbuchstaben bestehen und mind. eine Zahl enthalten.</small><br />
                <br />
                <input type="submit" class="btn btn-primary" value="Absenden" />
            </div>
        </div>
    }
</div>

@section scripts
{
    <script src="~/Scripts/zxcvbn.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#@Html.IdFor(m => m.Password)').on('keyup', function () {
                var pwResult = zxcvbn($(this).val());
                if ($(this).val() !== '') $('#password-strength').show();

                $('#password-strength .claim').hide();

                $('#@Html.IdFor(m => m.Password)').removeClass('text-danger').removeClass('text-warning').removeClass('text-info').removeClass('text-success');

                switch (pwResult.score) {
                    case 0: case 1:
                        $('#password-strength .text-danger').show();
                        $('#@Html.IdFor(m => m.Password)').addClass('text-danger');
                        break;

                    case 2:
                        $('#password-strength .text-warning').show();
                        $('#@Html.IdFor(m => m.Password)').addClass('text-warning');
                        break;

                    case 3:
                        $('#password-strength .text-info').show();
                        $('#@Html.IdFor(m => m.Password)').addClass('text-info');
                        break;

                    case 4:
                        $('#password-strength .text-success').show();
                        $('#@Html.IdFor(m => m.Password)').addClass('text-success');
                        break;
                }

                console.log(pwResult);
            });
        });
    </script>
}